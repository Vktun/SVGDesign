@{
    ViewBag.Title = "SVGDesign";
}
@Styles.Render("~/content/jquerycss")
@Scripts.Render("~/bundles/svg")
<style>
    .border-show {
        border: 1px solid black;
    }

    .svg-element .col-xs-3 {
        padding: 5px;
    }

    .svg-element .thumbnail {
        margin-bottom: 0px;
        width: 40px;
        height: 40px;
        position: relative;
        z-index: -1;
    }

    .toolbar-v {
        width: 100%;
        height: 40px;
        line-height: 40px;
        background-color: #ccc
    }

    .svg-background {
        background-color: #e7e7e7;
    }

    .svgSource {
        width: 0px;
        height: 0px;
    }

    .thumbnail-higher {
        position: relative;
        z-index: 100;
    }

    .svg-element .active {
        background-color: bisque;
        filter: alpha(opacity:50);
        opacity: 0.5;
        -moz-opacity: 0.5;
        -khtml-opacity: 0.5;
    }

    .el-component {
        width: 100px;
        height: 100px;
    }
</style>
<div style="margin-top:20px;">
    <div class="col-lg-10">
        <div class="row toolbar-v">
            <div class="col-lg-4">
                <a href="#" class="btn btn-info btn-xs" onclick="trans()" title="旋转">
                    <i class="glyphicon glyphicon-repeat" aria-hidden="true"></i>
                </a>
                <a href="#" class="btn btn-info btn-xs" onclick="gridShow()" title="显示/隐藏网格">
                    <i class="fa fa-th" aria-hidden="true"></i>
                </a>
            </div>
            <div class="col-lg-8"></div>
        </div>
        <div id="drawing" style="min-height:500px;" class="row"></div>
    </div>
    <div class="col-lg-2 border-show pull-right" id="attr">
        <div class="row">
            <h5>属性</h5>
            <input type="hidden" id="ledId" />
            <div class="input-group input-group-sm">
                <span class="input-group-addon">位置</span>
                <input type="text" class="form-control" name="centerX" placeholder="x" value="">
                <input type="text" class="form-control" name="centerY" placeholder="y" value="">
            </div>
            <div class="input-group input-group-sm">
                <span class="input-group-addon">宽度</span>
                <input type="text" class="form-control" placeholder="" value="">
            </div>
            <div class="input-group input-group-sm">
                <span class="input-group-addon">高度</span>
                <input type="text" class="form-control" placeholder="" value="">
            </div>
        </div>
    </div>
</div>
<script>
    var h = (document.body.clientHeight), w = (document.body.clientWidth * 0.82) - 30;
    var tempSVG = "";

    var drawing = new SVG('drawing').size(w, h).addClass("svg-background")
        .panZoom({ zoomMin: 0.1, zoomMax: 10 });
    drawing.zoom(0.4, { x: w/3, y: h/3 })
    $(document).ready(function () {
        w = (document.body.clientWidth * 0.82) - 30;
        h = (document.body.clientHeight);
        $.get("/Template/GetProject", { projectName: "aircondition" }, function (res) {
            drawing.svg(res);
            //drawing.each(function (i, children) {
            //    if (children[i].parent()) {
            //        //children[i].selectize().draggable().resize()
            //        children[i].selectize()
            //    }
            //}, true);
        })
    })

    function unselect() {
        $(document).on("click", function (e) {
            $('#drawing  .svg-desgin-element').each(function () {
                this.instance.selectize(false)
                this.instance.removeClass('selected')
            })
            if ($(e.target).hasClass("svg-desgin-element")) {
                var curId = $(e.target).attr("id");
                var el = SVG.get('#' + curId);
                if (group.index(el) > -1) {
                    el.selectize(true)
                    this.instance.addClass('selected')
                }
            }
        })
    }
    function svgClick(e) {
        if (tempSVG) {
            var elc = getCoordinate({ x: e.x, y: e.y });
            createElement(elc);
        } else {
            unselect()
        }
    }
    function getCoordinate(elCoord) {
        var svgObj = $("#drawing>svg");
        var svgCoord = {};
        svgCoord.x = svgObj.offset().left;
        svgCoord.y = svgObj.offset().top;
        var coord = {};
        coord.x = elCoord.x - svgCoord.x - 10;
        coord.y = elCoord.y - svgCoord.y - 10;
        coord.x = coord.x > 0 ? coord.x : 0;
        coord.y = coord.y > 0 ? coord.y : 0;
        return coord;
    }
    function createElement(coord) {
        var obj = group.svg(tempSVG);
        var el = null;
        group.each(function (i, children) {
            var _this = this;

            if (!_this.hasClass("el-component")) {
                _this.addClass("el-component").addClass("svg-desgin-element")
                    .size(100, 100).move(coord.x, coord.y)
                    .draggable().selectize().resize()

            }

        })
        tempSVG = null;
    }

</script>

<script src="~/Scripts/svg-attr/svg.attr.js"></script>
@Scripts.Render("~/bundles/jqueryui")
