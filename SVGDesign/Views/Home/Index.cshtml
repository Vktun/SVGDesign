@{
    ViewBag.Title = "SVGDesign";
    Layout = "~/Views/Shared/_Layout_Site.cshtml";
}
@Styles.Render("~/content/jquerycss")
@Scripts.Render("~/bundles/svg")
<style>
    .border-show {
        border: 1px solid black;
    }

    .svg-element .col-xs-3 {
        padding: 5px;
    }

    .svg-element .thumbnail {
        margin-bottom: 0px;
        width: 40px;
        height: 40px;
        position: relative;
        z-index: -1;
    }

    .toolbar-v {
        width: 100%;
        height: 40px;
        line-height: 40px;
        background-color: #ccc
    }

    .svg-background {
        background-color: #e7e7e7;
    }

    .svgSource {
        width: 0px;
        height: 0px;
    }

    .thumbnail-higher {
        position: relative;
        z-index: 100;
    }

    .svg-element .active {
        background-color: bisque;
        filter: alpha(opacity:50);
        opacity: 0.5;
        -moz-opacity: 0.5;
        -khtml-opacity: 0.5;
    }

    .el-component {
        width: 100px;
        height: 100px;
    }

    .st5 {
        stroke-dasharray: 40;
        animation: dash 5s linear infinite;
    }

    .st8, .st2 {
        stroke-dasharray: 20;
        animation: dash2 5s linear infinite;
    }

    .st86, .waterPumpAlarm {
        animation: rectHeight 3s infinite linear;
        -webkit-animation: rectHeight 3s infinite linear;
        -moz-animation: rectHeight 3s infinite linear;
        -ms-animation: rectHeight 3s infinite linear;
    }

    #bulb-body-fill {
        -webkit-animation: bulb-on 1s ease infinite;
        animation: bulb-on 1s ease infinite;
    }

    @@-webkit-keyframes bulb-on {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    @@keyframes bulb-on {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    @@keyframes dash {
        to {
            stroke-dashoffset: -400;
        }
    }

    @@keyframes dash2 {
        to {
            stroke-dashoffset: 200;
        }
    }

    @@keyframes rectHeight {
        0% {
            height: 0px;
        }

        25% {
            height: 40px;
        }

        50% {
            height: 85px;
        }

        75% {
            height: 130px;
        }

        100% {
            height: 170.918px;
        }
    }
</style>
<div>
    <div class="row toolbar-v">
        <div class="col-lg-4">
            <a href="#" class="btn btn-info btn-xs" onclick="trans()" title="旋转">
                <i class="glyphicon glyphicon-repeat" aria-hidden="true"></i>
            </a>
            <a href="#" class="btn btn-info btn-xs" onclick="gridShow()" title="显示/隐藏网格">
                <i class="fa fa-th" aria-hidden="true"></i>
            </a>
        </div>
        <div class="col-lg-8"></div>
    </div>
    <div id="drawing" style="min-height:700px;" class="row"></div>
</div>
<script>
    var h = (document.body.clientHeight), w = (document.body.clientWidth) - 30;
    var tempSVG = "";
    var drawing = new SVG('drawing').size(w, h).addClass("svg-background")
        .panZoom({ zoomMin: 0.1, zoomMax: 10 });
    drawing.zoom(0.6, { x: 0, y: 0 })
    $(document).ready(function () {
        w = (document.body.clientWidth) - 30;
        h = (document.body.clientHeight);
        $.get("/Template/GetProject", { projectName: "aircondition" }, function (res) {
            drawing.svg(res);
            drawing.each(function (i, children) {

                //if (children[i].parent() && children[i].hasClass("vk-el")) {
                //    //children[i].selectize().draggable().resize()
                //    children[i].selectize()
                //}
                //if (children[i].hasClass("st60")) {
                //    children[i].animate().dmove(9, 0).loop()
                //}
                //if (children[i].hasClass("st40") || children[i].hasClass("st69")) {
                //    children[i].animate().dmove(-25, 0).loop()
                //}
            }, true);
            unselect()
        })
    })

    function unselect() {
        $(document).on("click", function (e) {
            $('#drawing  .vk-el').each(function () {
                this.instance.selectize(false)
                this.instance.removeClass('selected')
            })
            if ($(e.target).hasClass("vk-el")) {
                var curId = $(e.target).attr("id");
                var el = SVG.get('#' + curId);
                if (el) {
                    el.selectize(true)
                    el.addClass('selected')
                }
            }
        })
    }
    function svgClick(e) {
        if (tempSVG) {
            var elc = getCoordinate({ x: e.x, y: e.y });
            createElement(elc);
        } else {
            unselect()
        }
    }
    function getCoordinate(elCoord) {
        var svgObj = $("#drawing>svg");
        var svgCoord = {};
        svgCoord.x = svgObj.offset().left;
        svgCoord.y = svgObj.offset().top;
        var coord = {};
        coord.x = elCoord.x - svgCoord.x - 10;
        coord.y = elCoord.y - svgCoord.y - 10;
        coord.x = coord.x > 0 ? coord.x : 0;
        coord.y = coord.y > 0 ? coord.y : 0;
        return coord;
    }
    function createElement(coord) {
        var obj = group.svg(tempSVG);
        var el = null;
        group.each(function (i, children) {
            var _this = this;

            if (!_this.hasClass("el-component")) {
                _this.addClass("el-component").addClass("vk-el")
                    .size(100, 100).move(coord.x, coord.y)
                    .draggable().selectize().resize()

            }

        })
        tempSVG = null;
    }

</script>
<script src="~/Scripts/svg-attr/svg.attr.js"></script>
@Scripts.Render("~/bundles/jqueryui")
